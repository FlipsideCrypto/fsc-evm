version: 2
models:
  - name: test_gold__fact_blocks_full
    description: "This is a view used to test all of the gold fact blocks model."
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - BLOCK_NUMBER
      - fsc_utils.sequence_gaps:
          column_name: BLOCK_NUMBER
          where: BLOCK_TIMESTAMP < CURRENT_DATE - 1

    columns:
      - name: BLOCK_NUMBER
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: BLOCK_HASH
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: BLOCK_TIMESTAMP
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - TIMESTAMP_LTZ
                - TIMESTAMP_NTZ
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: hour
              interval: 2
      - name: NETWORK
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: ^[a-zA-Z0-9_]+$
      - name: TX_COUNT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: SIZE
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: MINER
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: EXTRA_DATA
        tests:
          - not_null
      - name: PARENT_HASH
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: GAS_USED
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: GAS_LIMIT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: >-
          {{ 'BASE_FEE_PER_GAS' if var('GLOBAL_PROD_DB_NAME').upper() not in ['CORE'] else '0' }}
        tests:
          - not_null:
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() not in ['CORE'] }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() not in ['CORE'] }}"
              column_type_list:
                - NUMBER
                - FLOAT
      - name: >-
          {{ 'MIX_HASH' if var('GLOBAL_PROD_DB_NAME').upper() in ['INK', 'MANTLE'] else '1' }}
        tests:
          - not_null:
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() in ['INK', 'MANTLE'] }}"
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() in ['INK', 'MANTLE'] }}"
      - name: DIFFICULTY
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: >-
          {{ 'TOTAL_DIFFICULTY' if var('GLOBAL_PROD_DB_NAME').upper() not in ['INK'] else '2' }}
        tests:
          - not_null:
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() not in ['INK'] }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              enabled: "{{ var('GLOBAL_PROD_DB_NAME').upper() not in ['INK'] }}"
              column_type_list:
                - NUMBER
                - FLOAT
      - name: SHA3_UNCLES
        tests:
          - not_null
      - name: UNCLE_BLOCKS
        tests:
          - not_null
      - name: NONCE
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER
                - FLOAT
      - name: RECEIPTS_ROOT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: STATE_ROOT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: TRANSACTIONS_ROOT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: LOGS_BLOOM
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: FACT_BLOCKS_ID
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_unique
      - name: INSERTED_TIMESTAMP
        tests:
          - not_null
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: hour
              interval: 2
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - TIMESTAMP_LTZ
                - TIMESTAMP_NTZ
      - name: MODIFIED_TIMESTAMP
        tests:
          - not_null
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: hour
              interval: 2
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - TIMESTAMP_LTZ
                - TIMESTAMP_NTZ