# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "fsc_evm"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "fsc_evm"

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

models:
  fsc_evm:
    decoder_package:
      abis:
        streamline:
          +schema: "streamline"
          complete:
            streamline__complete_contract_abis:
              +enabled: "{{ var('GLOBAL_PROD_DB_NAME') != 'ethereum' }}"
            streamline_ethereum__complete_contract_abis:
              +enabled: "{{ var('GLOBAL_PROD_DB_NAME') == 'ethereum' }}"
              +alias: "streamline__complete_contract_abis"
        bronze:
          +schema: "bronze"
          ethereum:
            +enabled: "{{ var('GLOBAL_PROD_DB_NAME') == 'ethereum' }}"
          core:
            +enabled: "{{ var('GLOBAL_PROD_DB_NAME') == 'core' }}"
            +alias: "core__test_core"

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

vars:
  "dbt_date:time_zone": GMT
